name: MythX Models

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9', '3.10', 'pypy3.8', 'pypy3.9', 'pypy3.10' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          path: "requirements_dev.txt"
      - name: Test with pytest
        run: make test
      - name: Coveralls
        if: success() && github.repository == 'dmuhs/mythx-models'
        run: coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          path: "requirements_dev.txt"
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: make release

  cloudsmith_publish_dev:
    name: cloudsmith_publish_dev
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/upload-to-cloudsmith'
    concurrency: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          path: "requirements_dev.txt"
      - name: python setup
        run: |
          pip install wheel
          python setup.py bdist_wheel --universal
      - name: Push
        id: push
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "python"
          owner: "consensys"
          repo: "diligence-pypi-dev"
          republish: "true" # needed ONLY if version is not changing
          file: dist/*.whl
      - name: Send slack Notification
        uses: Consensys/dili-slack-notification-action@v1.0.0
        with:
          env: "dev"
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  cloudsmith_publish:
    name: cloudsmith_publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/upload-to-cloudsmith'
    concurrency: master
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        uses: py-actions/py-dependency-install@v2
        with:
          path: "requirements_dev.txt"
      - name: python setup
        run: |
          pip install wheel
          python setup.py bdist_wheel --universal
      - name: Push
        id: push
        uses: cloudsmith-io/action@master
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: "push"
          format: "python"
          owner: "consensys"
          repo: "diligence-pypi"
          republish: "true" # needed ONLY if version is not changing
          file: dist/*.whl
      - name: Send slack Notification
        uses: Consensys/dili-slack-notification-action@v1.0.0
        with:
          env: "master"
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
